
Процедура ИзменениеСтатусаЗадачи(Задача, Статус = Неопределено) Экспорт
	
	Если Статус <> Неопределено Тогда
		ДокОб = Задача.ПолучитьОбъект();
		Если Статус = "Завершена" Тогда
			ДокОб.Состояние = Справочники.СостоянияЗадач.Завершена;	
		ИначеЕсли Статус = "ОжиданиеВыполнения" Тогда
			ДокОб.Состояние = Справочники.СостоянияЗадач.НаПланировании;	
		ИначеЕсли Статус = "Выполняется" Тогда
			ДокОб.Состояние = Справочники.СостоянияЗадач.Выполняется;	
		ИначеЕсли Статус = "Приостановлена" Тогда
			ДокОб.Состояние = Справочники.СостоянияЗадач.Приостановлена;	
		ИначеЕсли Статус = "НаПроверку" Тогда
			ДокОб.Состояние = Справочники.СостоянияЗадач.НаКонтроле;	
		Иначе
			ДокОб.Состояние = Справочники.СостоянияЗадач.Создана;	
		КонецЕсли; 
		ДокОб.Записать();
	КонецЕсли; 
	
КонецПроцедуры

//блок работы с telegram, код взять тут https://1c-e.ru/?p=210
Процедура ПолучитьUpdate()Экспорт 
	
	ЗапросМакс = Новый Запрос("ВЫБРАТЬ
	|	МАКСИМУМ(telegram.update_id) КАК update_id
	|ИЗ
	|	РегистрСведений.telegram КАК telegram");
	Выборка = ЗапросМакс.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		OffSet = "?offset="+Формат(Выборка.update_id, "ЧГ=");
	Иначе
		OffSet = "";
	КонецЕсли;
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "getUpdates"+OffSet;
	Ресурс = "bot"+Ключ+"/"+Команда;
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	Если ОтветСоотв["ok"] Тогда
		getUpdatesОбОтв(ОтветСоотв);
	КонецЕсли;
	
КонецПроцедуры

Процедура getUpdatesОбОтв(ОтветСоотв)
	
	ТабID = Новый ТаблицаЗначений;
	ТабID.Колонки.Добавить("update_id", ОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(15));
	
	Для Каждого upd Из ОтветСоотв["result"] Цикл
		
		СтрТаб = ТабID.Добавить();
		СтрТаб.update_id = upd["update_id"];
		
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТабID.update_id КАК update_id
	|ПОМЕСТИТЬ ТабID
	|ИЗ
	|	&ТабID КАК ТабID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабID.update_id КАК update_id
	|ИЗ
	|	ТабID КАК ТабID
	|ГДЕ
	|	НЕ ТабID.update_id В
	|				(ВЫБРАТЬ
	|					telegram.update_id
	|				ИЗ
	|					РегистрСведений.telegram КАК telegram)");
	
	Запрос.УстановитьПараметр("ТабID",ТабID);
	
	НовыеАпдейты = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("update_id");
	
	Для Каждого upd Из ОтветСоотв["result"] Цикл
		Если НовыеАпдейты.Найти(upd["update_id"]) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		message = upd["message"];
		мз = РегистрыСведений.telegram.СоздатьМенеджерЗаписи();
		мз.update_id = upd["update_id"];
		мз.date = МестноеВремя(Дата('19700101')+message["date"]);
		мз.text = message["text"];
		мз.message_id 	= message["message_id"];
		мз.first_name 	= message["from"]["first_name"];
		мз.id 			= message["from"]["id"];
		мз.username		= message["from"]["username"];
		мз.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьЗапросы() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	telegram.update_id КАК update_id,
	|	telegram.date КАК date,
	|	telegram.text КАК text,
	|	telegram.message_id КАК message_id,
	|	telegram.first_name КАК first_name,
	|	telegram.id КАК id
	|ИЗ
	|	РегистрСведений.telegram КАК telegram
	|ГДЕ
	|	НЕ telegram.Обработан
	|
	|УПОРЯДОЧИТЬ ПО
	|	message_id
	|ИТОГИ ПО
	|	id");
	ВыборкаЮзеров = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЮзеров.Следующий() Цикл
		ВыборкаЗапросов = ВыборкаЮзеров.Выбрать();
		Пока ВыборкаЗапросов.Следующий() Цикл
			ok = Ложь;
			ОбработатьЗапрос(ВыборкаЗапросов, ok);
			Если ok Тогда
				мз = РегистрыСведений.telegram.СоздатьМенеджерЗаписи();
				мз.update_id =ВыборкаЗапросов.update_id;
				мз.Прочитать();
				мз.Обработан = Истина;
				мз.Записать();
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьЗапрос(ЗапросПользователя, ok)
	
	ОтправитьСообщениеСтарая(СформироватьСообщение(ЗапросПользователя.text, ЗапросПользователя), ЗапросПользователя.id, ok);		
	
КонецПроцедуры

Процедура ОтправитьСообщение(ТекстСообщения, ПолучательНик) Экспорт
	
	Ключ = Константы.КлючAPI.Получить();
	Если СокрЛП(Ключ) = "" Тогда
		ok = Ложь;
	Иначе
		//получим ИД по нику, потом отправим месседж
		Сервер = "api.telegram.org";
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	telegram.id КАК id
		|ИЗ
		|	РегистрСведений.telegram КАК telegram
		|ГДЕ
		|	telegram.username = &username";
		
		Запрос.УстановитьПараметр("username", СокрЛП(ПолучательНик));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ПолучательID = ВыборкаДетальныеЗаписи.id;
		Иначе
			ПолучательID = "";
		КонецЕсли;
		
		Если ПолучательID = "" Тогда
			Сообщить("Не найден ID пользователя " + ПолучательНик);
		Иначе
			Команда = "sendMessage";
			Ресурс = "bot"+Ключ+"/"+Команда+"?chat_id="+Формат(ПолучательID,"ЧГ=")+"&text="+СокрЛП(ТекстСообщения); 
			Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
			Запрос = Новый HTTPЗапрос(Ресурс); 
			
			Ответ = Соединение.Получить(Запрос);
			Чтение = Новый ЧтениеJSON;
			Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
			
			ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
			ok = ОтветСоотв["ok"] ;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтправитьСообщениеСтарая (ТекстСообщения, ПолучательID, ok) Экспорт
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "sendMessage";
	Ресурс = "bot"+Ключ+"/"+Команда+"?chat_id="+Формат(ПолучательID,"ЧГ=")+"&text="+СокрЛП(ТекстСообщения); 
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	ok = ОтветСоотв["ok"] ;
	
КонецПроцедуры

Функция СформироватьСообщение(ТипЗапроса, ЗапросПользователя)
	
	Результат = "Неизвестный запрос";
	
	Если ТипЗапроса = "/start"  тогда
		Результат = СокрЛП(ПолучитьОбщийМакет("ОтветStart").ПолучитьТекст()) ;
	КонецЕсли;
	Если ТипЗапроса = "/wt"  тогда
		Результат = "Шепчет!";
	КонецЕсли;
	
	Если ТипЗапроса = "/time"  тогда
		Результат = Формат(ТекущаяДата(),"ДЛФ=DDT") ;
	КонецЕсли;
	
	Если ТипЗапроса = "/hello"  тогда
		Результат = "Привет," +ЗапросПользователя.first_name;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОтправитьФото (ТекстСообщения, ПолучательID,ok)
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "sendPhoto";
	Ресурс = "bot"+Ключ+"/"+Команда+"?chat_id="+Формат(ПолучательID,"ЧГ=")+"&photo="+СокрЛП(ТекстСообщения); 
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	ok = ОтветСоотв["ok"] ;
		
КонецПроцедуры
